#pragma warning disable 1591
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Chords.Android.Views
{
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;


[System.CodeDom.Compiler.GeneratedCodeAttribute("RazorTemplatePreprocessor", "2.6.0.0")]
public partial class ShowChordResultView : PortableRazor.ViewBase
{

#line hidden

#line 2 "ShowChordResultView.cshtml"
public Chords.Android.Models.ShowChordResultModel Model { get; set; }

#line default
#line hidden


public override void Execute()
{

#line 3 "ShowChordResultView.cshtml"
  
    var symbol = Model?.ChordDecorator?.Symbols[0];
    var otherSymbols = Model.ChordDecorator != null ? Model.ChordDecorator.Symbols.Skip(1) : new string[0];


#line default
#line hidden
WriteLiteral("\n<!DOCTYPE html>\n<html>\n<head>\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" href=\"style.css\"");

WriteLiteral(" />\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" href=\"bootstrap.min.css\"");

WriteLiteral(" />\n</head>\n<body>\n    <nav");

WriteLiteral(" class=\"navbar navbar-inverse navbar-fixed-top\"");

WriteLiteral(">\n        <div");

WriteLiteral(" class=\"container\"");

WriteLiteral(">\n            <div");

WriteLiteral(" class=\"navbar-header\"");

WriteLiteral(">\n                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"navbar-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-target=\".navbar-collapse\"");

WriteLiteral(">\n                    <span");

WriteLiteral(" class=\"sr-only\"");

WriteLiteral(">Toggle navigation</span>\n                    <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                    <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                    <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                </button>\n                <span");

WriteLiteral(" class=\"navbar-brand\"");

WriteLiteral(">Show Chord</span>\n            </div>\n                \n            <div");

WriteLiteral(" class=\"navbar-collapse collapse\"");

WriteLiteral(">\n                <ul");

WriteLiteral(" class=\"nav navbar-nav\"");

WriteLiteral(">\n                    <li><a");

WriteAttribute ("href", " href=\"", "\""
, Tuple.Create<string,object,bool> ("", "hybrid:ShowChord?conv=", true)

#line 28 "ShowChordResultView.cshtml"
                , Tuple.Create<string,object,bool> ("", Model.Parameters["conv"]

#line default
#line hidden
, false)
);
WriteLiteral(">Show chord</a></li>\n                    <li><a");

WriteAttribute ("href", " href=\"", "\""
, Tuple.Create<string,object,bool> ("", "hybrid:FindChord?conv=", true)

#line 29 "ShowChordResultView.cshtml"
                , Tuple.Create<string,object,bool> ("", Model.Parameters["conv"]

#line default
#line hidden
, false)
);
WriteLiteral(">Find chord</a></li>\n\t\t\t\t\t<li><a");

WriteAttribute ("href", " href=\"", "\""
, Tuple.Create<string,object,bool> ("", "hybrid:Circle?conv=", true)

#line 30 "ShowChordResultView.cshtml"
             , Tuple.Create<string,object,bool> ("", Model.Parameters["conv"]

#line default
#line hidden
, false)
);
WriteLiteral(">Circle of Fifths</a></li>\n                </ul>\n            </div>\n        </div" +
">\n    </nav>\n    <script");

WriteLiteral(" src=\"jquery.min.js\"");

WriteLiteral("></script>\n    <script");

WriteLiteral(" src=\"bootstrap.min.js\"");

WriteLiteral("></script>\n    <div");

WriteLiteral(" class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 main-content\"");

WriteLiteral(">\n\n\t\t<!-- Main content start -->\n");


#line 40 "ShowChordResultView.cshtml"
        

#line default
#line hidden

#line 40 "ShowChordResultView.cshtml"
         if (Model.ChordDecorator != null)
		{


#line default
#line hidden
WriteLiteral("\t\t    <h2>");


#line 42 "ShowChordResultView.cshtml"
           Write(symbol);


#line default
#line hidden
WriteLiteral("</h2>\n");


#line 43 "ShowChordResultView.cshtml"

			if (otherSymbols.Any())
			{


#line default
#line hidden
WriteLiteral("\t\t\t    <h4>Other symbols:</h4>\n");


#line 47 "ShowChordResultView.cshtml"
			    foreach(var otherSymbol in otherSymbols)
			    {


#line default
#line hidden
WriteLiteral("\t\t\t        <span>");


#line 49 "ShowChordResultView.cshtml"
                     Write(otherSymbol);


#line default
#line hidden
WriteLiteral("</span>\n");


#line 50 "ShowChordResultView.cshtml"
			    }
			}


#line default
#line hidden
WriteLiteral("\t\t\t<h4>Chord intervals:</h4>\n");

WriteLiteral("\t\t\t<p>\n");


#line 54 "ShowChordResultView.cshtml"
			

#line default
#line hidden

#line 54 "ShowChordResultView.cshtml"
             foreach(var interval in Model.ChordDecorator.Intervals)
			{


#line default
#line hidden
WriteLiteral("\t\t\t    <span>");


#line 56 "ShowChordResultView.cshtml"
                 Write(interval);


#line default
#line hidden
WriteLiteral("</span>\n");


#line 57 "ShowChordResultView.cshtml"
			}


#line default
#line hidden
WriteLiteral("\t\t\t</p>\n");


#line 59 "ShowChordResultView.cshtml"



#line default
#line hidden
WriteLiteral("\t\t\t<h4>Chord notes:</h4>\n");

WriteLiteral("\t\t\t<p>\n");


#line 62 "ShowChordResultView.cshtml"
			

#line default
#line hidden

#line 62 "ShowChordResultView.cshtml"
             foreach(var note in Model.ChordDecorator.Notes)
			{


#line default
#line hidden
WriteLiteral("\t\t\t    <span>");


#line 64 "ShowChordResultView.cshtml"
                 Write(note);


#line default
#line hidden
WriteLiteral("</span>\n");


#line 65 "ShowChordResultView.cshtml"
			}


#line default
#line hidden
WriteLiteral("\t\t\t</p>\n");


#line 67 "ShowChordResultView.cshtml"
		}


#line default
#line hidden
WriteLiteral("\t\t<div");

WriteLiteral(" id=\"error\"");

WriteLiteral(" class=\"error\"");

WriteLiteral(">");


#line 68 "ShowChordResultView.cshtml"
                                 Write(Model.Error);


#line default
#line hidden
WriteLiteral("</div>\n");


#line 69 "ShowChordResultView.cshtml"
        

#line default
#line hidden

#line 69 "ShowChordResultView.cshtml"
         if (string.IsNullOrEmpty(Model.Error))
		{


#line default
#line hidden
WriteLiteral("\t\t\t<div");

WriteLiteral(" id=\"loader\"");

WriteLiteral("></div>\n");

WriteLiteral("\t\t\t<script>\n\t\t\t\t$(document).ready(function (){\n\t                $.ajax({\n\t       " +
"             url: \'hybrid:ShowChordLayouts\',\n\t                    type: \'get\',\n\t" +
"                    data: {\n\t                        root: \'");


#line 78 "ShowChordResultView.cshtml"
                              Write(Model.Parameters["root"]);


#line default
#line hidden
WriteLiteral("\',\n\t                        type: \'");


#line 79 "ShowChordResultView.cshtml"
                              Write(Model.Parameters["type"]);


#line default
#line hidden
WriteLiteral("\',\n\t                        partial: \'");


#line 80 "ShowChordResultView.cshtml"
                                 Write(Model.Parameters["partial"]);


#line default
#line hidden
WriteLiteral("\',\n\t                        special: \'");


#line 81 "ShowChordResultView.cshtml"
                                 Write(Model.Parameters["special"]);


#line default
#line hidden
WriteLiteral("\',\n\t                        conv: \'");


#line 82 "ShowChordResultView.cshtml"
                              Write(Model.Parameters["conv"]);


#line default
#line hidden
WriteLiteral("\'\n\t                    }\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t</script>\n");


#line 87 "ShowChordResultView.cshtml"
		}


#line default
#line hidden
WriteLiteral("        <!-- Main content end -->\t\n\n    </div>\n    <hr />\n    <footer>\n        <p" +
">&copy; 2017 - Tomáš Němec</p>\n    </footer>\n</body>\n</html>\n");

}
}
}
#pragma warning restore 1591
