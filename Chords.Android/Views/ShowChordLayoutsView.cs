#pragma warning disable 1591
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Chords.Android.Views
{
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;


[System.CodeDom.Compiler.GeneratedCodeAttribute("RazorTemplatePreprocessor", "2.6.0.0")]
public partial class ShowChordLayoutsView : PortableRazor.ViewBase
{

#line hidden

#line 2 "ShowChordLayoutsView.cshtml"
public Chords.Android.Models.ShowChordLayoutsModel Model { get; set; }

#line default
#line hidden


public override void Execute()
{

#line 3 "ShowChordLayoutsView.cshtml"
  
    var otherSymbols = Model.ChordDecorator != null ? Model.ChordDecorator.Symbols.Skip(1) : new string[0];


#line default
#line hidden
WriteLiteral("\n<!DOCTYPE html>\n<html>\n<head>\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" href=\"style.css\"");

WriteLiteral(" />\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" href=\"bootstrap.min.css\"");

WriteLiteral(" />\n</head>\n<body>\n    <nav");

WriteLiteral(" class=\"navbar navbar-inverse navbar-fixed-top\"");

WriteLiteral(">\n        <div");

WriteLiteral(" class=\"container\"");

WriteLiteral(">\n            <div");

WriteLiteral(" class=\"navbar-header\"");

WriteLiteral(">\n                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"navbar-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-target=\".navbar-collapse\"");

WriteLiteral(">\n                    <span");

WriteLiteral(" class=\"sr-only\"");

WriteLiteral(">Toggle navigation</span>\n                    <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                    <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                    <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                </button>\n                <span");

WriteLiteral(" class=\"navbar-brand\"");

WriteLiteral(">Show Chord</span>\n            </div>\n                \n            <div");

WriteLiteral(" class=\"navbar-collapse collapse\"");

WriteLiteral(">\n                <ul");

WriteLiteral(" class=\"nav navbar-nav\"");

WriteLiteral(">\n                    <li><a");

WriteAttribute ("href", " href=\"", "\""
, Tuple.Create<string,object,bool> ("", "hybrid:ShowChord?conv=", true)

#line 27 "ShowChordLayoutsView.cshtml"
                , Tuple.Create<string,object,bool> ("", Model.Parameters["conv"]

#line default
#line hidden
, false)
);
WriteLiteral(">Show chord</a></li>\n                    <li><a");

WriteAttribute ("href", " href=\"", "\""
, Tuple.Create<string,object,bool> ("", "hybrid:FindChord?conv=", true)

#line 28 "ShowChordLayoutsView.cshtml"
                , Tuple.Create<string,object,bool> ("", Model.Parameters["conv"]

#line default
#line hidden
, false)
);
WriteLiteral(">Find chord</a></li>\n                </ul>\n            </div>\n        </div>\n    " +
"</nav>\n    <script");

WriteLiteral(" src=\"jquery.min.js\"");

WriteLiteral("></script>\n    <script");

WriteLiteral(" src=\"bootstrap.min.js\"");

WriteLiteral("></script>\n    <div");

WriteLiteral(" class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 main-content\"");

WriteLiteral(">\n\n        <!-- Main content start -->\n");


#line 38 "ShowChordLayoutsView.cshtml"
		

#line default
#line hidden

#line 38 "ShowChordLayoutsView.cshtml"
         if (Model.ChordDecorator != null)
	    {


#line default
#line hidden
WriteLiteral("\t        <h2>");


#line 40 "ShowChordLayoutsView.cshtml"
           Write(Model.ChordDecorator.Symbols[0]);


#line default
#line hidden
WriteLiteral("</h2>\n");


#line 41 "ShowChordLayoutsView.cshtml"

	        if (otherSymbols.Any())
	        {


#line default
#line hidden
WriteLiteral("\t            <h4>Other symbols:</h4>\n");


#line 45 "ShowChordLayoutsView.cshtml"
	            foreach(var otherSymbol in otherSymbols)
	            {


#line default
#line hidden
WriteLiteral("\t                <span>");


#line 47 "ShowChordLayoutsView.cshtml"
                     Write(otherSymbol);


#line default
#line hidden
WriteLiteral("</span>\n");


#line 48 "ShowChordLayoutsView.cshtml"
	            }
	        }


#line default
#line hidden
WriteLiteral("\t        <h4>Chord intervals:</h4>\n");

WriteLiteral("\t        <p>\n");


#line 52 "ShowChordLayoutsView.cshtml"
	        

#line default
#line hidden

#line 52 "ShowChordLayoutsView.cshtml"
             foreach(var interval in Model.ChordDecorator.Intervals)
	        {


#line default
#line hidden
WriteLiteral("\t            <span>");


#line 54 "ShowChordLayoutsView.cshtml"
                 Write(interval);


#line default
#line hidden
WriteLiteral("</span>\n");


#line 55 "ShowChordLayoutsView.cshtml"
	        }


#line default
#line hidden
WriteLiteral("\t        </p>\n");


#line 57 "ShowChordLayoutsView.cshtml"



#line default
#line hidden
WriteLiteral("\t        <h4>Chord notes:</h4>\n");

WriteLiteral("\t        <p>\n");


#line 60 "ShowChordLayoutsView.cshtml"
	        

#line default
#line hidden

#line 60 "ShowChordLayoutsView.cshtml"
             foreach(var note in Model.ChordDecorator.Notes)
	        {


#line default
#line hidden
WriteLiteral("\t            <span>");


#line 62 "ShowChordLayoutsView.cshtml"
                 Write(note);


#line default
#line hidden
WriteLiteral("</span>\n");


#line 63 "ShowChordLayoutsView.cshtml"
	        }


#line default
#line hidden
WriteLiteral("\t        </p>\n");

WriteLiteral("\t        <div");

WriteLiteral(" id=\"error\"");

WriteLiteral(" class=\"error\"");

WriteLiteral(">");


#line 65 "ShowChordLayoutsView.cshtml"
                                     Write(Model.Error);


#line default
#line hidden
WriteLiteral("</div>\n");

WriteLiteral("\t        <div");

WriteLiteral(" id=\"loader\"");

WriteLiteral("></div>\n");

WriteLiteral("\t        <div");

WriteLiteral(" id=\"layouts\"");

WriteLiteral(" class=\"animate-bottom\"");

WriteLiteral(">\n");


#line 68 "ShowChordLayoutsView.cshtml"
	        

#line default
#line hidden

#line 68 "ShowChordLayoutsView.cshtml"
             if (Model.Layouts != null)
	        {


#line default
#line hidden
WriteLiteral("\t            <h4>Chord layouts:</h4>\n");

WriteLiteral("\t            <p>\n");

WriteLiteral("\t                ");


#line 72 "ShowChordLayoutsView.cshtml"
               Write(Model.Layouts.Length);


#line default
#line hidden
WriteLiteral(" results\n");


#line 73 "ShowChordLayoutsView.cshtml"
	                

#line default
#line hidden

#line 73 "ShowChordLayoutsView.cshtml"
                     foreach(var layout in Model.Layouts)
	                {


#line default
#line hidden
WriteLiteral("\t                    <div");

WriteLiteral(" class=\"col-xs-6 col-sm-4 col-md-3 col-lg-2 chord-layout\"");

WriteLiteral(">\n");


#line 76 "ShowChordLayoutsView.cshtml"
	                        

#line default
#line hidden

#line 76 "ShowChordLayoutsView.cshtml"
                             if (layout.Complete)
	                        {


#line default
#line hidden
WriteLiteral("\t                            <div");

WriteLiteral(" class=\"chordlayout\"");

WriteLiteral(">");


#line 78 "ShowChordLayoutsView.cshtml"
                                                     Write(layout.ToHtmlString());


#line default
#line hidden
WriteLiteral("</div>\n");


#line 79 "ShowChordLayoutsView.cshtml"
	                        }
	                        else
	                        {


#line default
#line hidden
WriteLiteral("\t                            <div");

WriteLiteral(" class=\"chordlayout incomplete\"");

WriteLiteral(">");


#line 82 "ShowChordLayoutsView.cshtml"
                                                                Write(layout.ToHtmlString());


#line default
#line hidden
WriteLiteral("</div>\n");


#line 83 "ShowChordLayoutsView.cshtml"
	                        }


#line default
#line hidden
WriteLiteral("\t                        <div");

WriteLiteral(" class=\"chordschema\"");

WriteLiteral(">\n");

WriteLiteral("\t                        ");


#line 85 "ShowChordLayoutsView.cshtml"
                        Write(layout.Schema);


#line default
#line hidden
WriteLiteral("\n\t                        </div>\n\t                    </div>\n");


#line 88 "ShowChordLayoutsView.cshtml"
	                }


#line default
#line hidden
WriteLiteral("\t            </p>\n");

WriteLiteral("\t            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\n\t                $(\'#loader\').hide();\n\t                $(\'#layouts\').show();\n\t " +
"           </script>\n");


#line 94 "ShowChordLayoutsView.cshtml"
	        }


#line default
#line hidden
WriteLiteral("\t\t\t</div>\n");


#line 96 "ShowChordLayoutsView.cshtml"
		}


#line default
#line hidden
WriteLiteral("        <!-- Main content end -->   \n\n    </div>\n    <hr />\n    <footer>\n        " +
"<p>&copy; 2017 - Tomáš Němec</p>\n    </footer>\n</body>\n</html>\n");

}
}
}
#pragma warning restore 1591
