#pragma warning disable 1591
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Chords.Android.Views
{
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

#line 1 "SettingsView.cshtml"
using Chords.Core.Extensions;

#line default
#line hidden


[System.CodeDom.Compiler.GeneratedCodeAttribute("RazorTemplatePreprocessor", "2.6.0.0")]
public partial class SettingsView : PortableRazor.ViewBase
{

#line hidden

#line 3 "SettingsView.cshtml"
public Chords.Android.Models.SettingsModel Model { get; set; }

#line default
#line hidden


public override void Execute()
{
WriteLiteral("ï»¿");

WriteLiteral("<!DOCTYPE html>\n<html>\n<head>\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" href=\"style.css\"");

WriteLiteral(" />\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" href=\"bootstrap.min.css\"");

WriteLiteral(" />\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" href=\"bootstrap-toggle.min.css\"");

WriteLiteral(" />\t\t\n</head>\n<body>\n    <nav");

WriteLiteral(" class=\"navbar navbar-inverse navbar-fixed-top\"");

WriteLiteral(">\n        <div");

WriteLiteral(" class=\"container\"");

WriteLiteral(">\n            <div");

WriteLiteral(" class=\"navbar-header\"");

WriteLiteral(">\n                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"navbar-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-target=\".navbar-collapse\"");

WriteLiteral(">\n                    <span");

WriteLiteral(" class=\"sr-only\"");

WriteLiteral(">Toggle navigation</span>\n                    <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                    <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                    <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                </button>\n                <span");

WriteLiteral(" class=\"navbar-brand\"");

WriteLiteral(">Setings</span>\n            </div>\n                \n            <div");

WriteLiteral(" class=\"navbar-collapse collapse\"");

WriteLiteral(">\n                <ul");

WriteLiteral(" class=\"nav navbar-nav\"");

WriteLiteral(">\n                    <li><a");

WriteLiteral(" href=\"hybrid:ShowChord\"");

WriteLiteral(">Show chord chart</a></li>\n                    <li><a");

WriteLiteral(" href=\"hybrid:FindChord\"");

WriteLiteral(">Find chord name</a></li>\n                    <li><a");

WriteLiteral(" href=\"hybrid:FavoriteChords\"");

WriteLiteral(">Favourite chords</a></li>\n                    <li><a");

WriteLiteral(" href=\"hybrid:Circle\"");

WriteLiteral(">Circle of fifths</a></li>\n                    <li><a");

WriteLiteral(" href=\"hybrid:Settings\"");

WriteLiteral(">Settings</a></li>\n                </ul>\n            </div>\n        </div>\n    </" +
"nav>\n    <script");

WriteLiteral(" src=\"jquery.min.js\"");

WriteLiteral("></script>\n    <script");

WriteLiteral(" src=\"bootstrap.min.js\"");

WriteLiteral("></script>\n    <script");

WriteLiteral(" src=\"bootstrap-toggle.min.js\"");

WriteLiteral("></script>\n\t<script");

WriteLiteral(" src=\"bootstrap-slider.js\"");

WriteLiteral("></script>\n    <div");

WriteLiteral(" class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 main-content\"");

WriteLiteral(">\n\n        <!-- Main content start -->\n        <nav");

WriteLiteral(" class=\"navbar navbar-inverse\"");

WriteLiteral(">\n            <div");

WriteLiteral(" class=\"container\"");

WriteLiteral(">\n                <div");

WriteLiteral(" class=\"navbar-header\"");

WriteLiteral(">\n                    <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"navbar-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-target=\".navbar-conv-collapse\"");

WriteLiteral(">\n                        <span");

WriteLiteral(" class=\"sr-only\"");

WriteLiteral(">Toggle naming convention</span>\n                        <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                        <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                        <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                    </button>\n                    <span");

WriteLiteral(" class=\"navbar-brand\"");

WriteLiteral(" id=\"navbar-conv\"");

WriteLiteral(">");


#line 51 "SettingsView.cshtml"
                                                            Write(Model.conv.ToDescription());


#line default
#line hidden
WriteLiteral("</span>\n                </div>\n                    \n                <div");

WriteLiteral(" class=\"navbar-conv-collapse collapse\"");

WriteLiteral(">\n                    <ul");

WriteLiteral(" class=\"nav navbar-nav\"");

WriteLiteral(">\n");


#line 56 "SettingsView.cshtml"
                    

#line default
#line hidden

#line 56 "SettingsView.cshtml"
                     foreach(var conv in @Model.NamingConventions)
                    {
						var notes = string.Format("({0})", string.Join("-", Model.Notes.Select(i => i.ToString(conv))));


#line default
#line hidden
WriteLiteral("                        <li><a");

WriteAttribute ("href", " href=\"", "\""
, Tuple.Create<string,object,bool> ("", "hybrid:Settings?conv=", true)

#line 59 "SettingsView.cshtml"
                   , Tuple.Create<string,object,bool> ("", conv

#line default
#line hidden
, false)
);
WriteLiteral(">");


#line 59 "SettingsView.cshtml"
                                                             Write(conv.ToDescription());


#line default
#line hidden
WriteLiteral(" <sub>");


#line 59 "SettingsView.cshtml"
                                                                                         Write(notes);


#line default
#line hidden
WriteLiteral("</sub></a></li>\n");


#line 60 "SettingsView.cshtml"
                    }


#line default
#line hidden
WriteLiteral("                    </ul>\n                </div>\n            </div>\n        </nav" +
">\n        <nav");

WriteLiteral(" class=\"navbar navbar-inverse\"");

WriteLiteral(">\n            <div");

WriteLiteral(" class=\"container\"");

WriteLiteral(">\n                <div");

WriteLiteral(" class=\"navbar-header\"");

WriteLiteral(">\n                    <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"navbar-toggle\"");

WriteLiteral(" data-toggle=\"collapse\"");

WriteLiteral(" data-target=\".navbar-types-collapse\"");

WriteLiteral(">\n                        <span");

WriteLiteral(" class=\"sr-only\"");

WriteLiteral(">Toggle chord types</span>\n                        <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                        <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                        <span");

WriteLiteral(" class=\"icon-bar\"");

WriteLiteral("></span>\n                    </button>\n                    <span");

WriteLiteral(" class=\"navbar-brand\"");

WriteLiteral(" id=\"navbar-types\"");

WriteLiteral(">");


#line 74 "SettingsView.cshtml"
                                                             Write(Model.ShowBasicChordTypes ? "Basic chords" : "All chords");


#line default
#line hidden
WriteLiteral("</span>\n                </div>\n                    \n                <div");

WriteLiteral(" class=\"navbar-types-collapse collapse\"");

WriteLiteral(">\n                    <ul");

WriteLiteral(" class=\"nav navbar-nav\"");

WriteLiteral(">\n                        <li><a");

WriteLiteral(" href=\"hybrid:Settings?basictypes=true\"");

WriteLiteral(">Basic chords</a></li>\n\t\t\t\t\t\t<li><a");

WriteLiteral(" href=\"hybrid:Settings?basictypes=false\"");

WriteLiteral(">All chords</a></li>\n                    </ul>\n                </div>\n           " +
" </div>\n        </nav>\n\t\t<div");

WriteLiteral(" class=\"row vertical-align\"");

WriteLiteral(">\n            <div");

WriteLiteral(" class=\"col-xs-9 col-sm-9 col-md-9 col-lg-9\"");

WriteLiteral(">Highest fret:</div>\n            <div");

WriteLiteral(" class=\"col-xs-3 col-sm-3 col-md-3 col-lg-3 justify-right\"");

WriteLiteral(">\n                <div");

WriteLiteral(" id=\"maxfret-badge\"");

WriteLiteral(" class=\"badge badge-inverse\"");

WriteLiteral(">");


#line 88 "SettingsView.cshtml"
                                                               Write(Model.maxFret);


#line default
#line hidden
WriteLiteral("</div>\n            </div>\n\t\t</div>\n        <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\n\t\t\t<div");

WriteLiteral(" class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"");

WriteLiteral(">\n                <input");

WriteLiteral(" type=\"range\"");

WriteLiteral(" id=\"maxfret\"");

WriteAttribute ("value", " value=\"", "\""

#line 93 "SettingsView.cshtml"
                 , Tuple.Create<string,object,bool> ("", Model.maxFret

#line default
#line hidden
, false)
);
WriteLiteral(" min=\"1\"");

WriteLiteral(" max=\"15\"");

WriteLiteral(" step=\"1\"");

WriteLiteral(" />\n\t\t\t</div>\n        </div>\n        <div");

WriteLiteral(" class=\"row vertical-align\"");

WriteLiteral(" style=\"margin-bottom: 20px;\"");

WriteLiteral(">\n            <span");

WriteLiteral(" class=\"col-xs-9 col-sm-9 col-md-9 col-lg-9\"");

WriteLiteral(">Allow barre chords</span>\n\t\t\t<span");

WriteLiteral(" class=\"col-xs-3 col-sm-3 col-md-3 col-lg-3 justify-right\"");

WriteLiteral(">\n");


#line 99 "SettingsView.cshtml"
            

#line default
#line hidden

#line 99 "SettingsView.cshtml"
             if (Model.AllowBarre)
            {


#line default
#line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" id=\"barre\"");

WriteLiteral(" name=\"barre\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" data-toggle=\"toggle\"");

WriteLiteral(" data-on=\"Yes\"");

WriteLiteral(" data-off=\"No\"");

WriteLiteral(" checked=\"checked\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(" />\n");


#line 102 "SettingsView.cshtml"
            }
            else
            {


#line default
#line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" id=\"barre\"");

WriteLiteral(" name=\"barre\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" data-toggle=\"toggle\"");

WriteLiteral(" data-on=\"Yes\"");

WriteLiteral(" data-off=\"No\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(" />\n");


#line 106 "SettingsView.cshtml"
            }


#line default
#line hidden
WriteLiteral("\t\t\t</span>\n        </div>\n        <div");

WriteLiteral(" class=\"row vertical-align\"");

WriteLiteral(" style=\"margin-bottom: 20px;\"");

WriteLiteral(">\n            <span");

WriteLiteral(" class=\"col-xs-9 col-sm-9 col-md-9 col-lg-9\"");

WriteLiteral(">Allow chords with muted high strings</span>\n            <span");

WriteLiteral(" class=\"col-xs-3 col-sm-3 col-md-3 col-lg-3 justify-right\"");

WriteLiteral(">\n");


#line 112 "SettingsView.cshtml"
			

#line default
#line hidden

#line 112 "SettingsView.cshtml"
             if (Model.AllowSpecial)
			{


#line default
#line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" id=\"special\"");

WriteLiteral(" name=\"special\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" data-toggle=\"toggle\"");

WriteLiteral(" data-on=\"Yes\"");

WriteLiteral(" data-off=\"No\"");

WriteLiteral(" checked=\"checked\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(" />\n");


#line 115 "SettingsView.cshtml"
			}
			else
			{


#line default
#line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" id=\"special\"");

WriteLiteral(" name=\"special\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" data-toggle=\"toggle\"");

WriteLiteral(" data-on=\"Yes\"");

WriteLiteral(" data-off=\"No\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(" />\n");


#line 119 "SettingsView.cshtml"
			}


#line default
#line hidden
WriteLiteral("\t\t\t</span>\n        </div>\n        <div");

WriteLiteral(" class=\"row vertical-align\"");

WriteLiteral(" style=\"margin-bottom: 20px;\"");

WriteLiteral(">\n            <span");

WriteLiteral(" class=\"col-xs-9 col-sm-9 col-md-9 col-lg-9\"");

WriteLiteral(">Show tips</span>\n            <span");

WriteLiteral(" class=\"col-xs-3 col-sm-3 col-md-3 col-lg-3 justify-right\"");

WriteLiteral(">\n");


#line 125 "SettingsView.cshtml"
            

#line default
#line hidden

#line 125 "SettingsView.cshtml"
             if (Model.ShowTips)
            {


#line default
#line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" id=\"tips\"");

WriteLiteral(" name=\"tips\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" data-toggle=\"toggle\"");

WriteLiteral(" data-on=\"Yes\"");

WriteLiteral(" data-off=\"No\"");

WriteLiteral(" checked=\"checked\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(" />\n");


#line 128 "SettingsView.cshtml"
            }
            else
            {


#line default
#line hidden
WriteLiteral("                <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" id=\"tips\"");

WriteLiteral(" name=\"tips\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" data-toggle=\"toggle\"");

WriteLiteral(" data-on=\"Yes\"");

WriteLiteral(" data-off=\"No\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(" />\n");


#line 132 "SettingsView.cshtml"
            }


#line default
#line hidden
WriteLiteral("            </span>\n        </div>\n        <div");

WriteLiteral(" class=\"error\"");

WriteLiteral(">");


#line 135 "SettingsView.cshtml"
                      Write(Model.Error);


#line default
#line hidden
WriteLiteral("</div>\n\t\t<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
			$(document).ready(function() {
				$('#barre').show();
				$('#special').show();
                $('#maxfret').on('input', function(){
                    var val = $(this).val();
				    $('#maxfret-badge').html(val);
                });
                $('#maxfret').on('change', function(){
				    var val = $(this).val();
				    location.href = 'hybrid:Settings?maxfret=' + val;
				});
                $('#barre').on('change', function(){
                    var val = $(this).prop('checked');
                    location.href = 'hybrid:Settings?barre=' + val;
                });
                $('#special').on('change', function(){
                    var val = $(this).prop('checked');
                    location.href = 'hybrid:Settings?special=' + val;
                });
                $('#tips').on('change', function(){
                    var val = $(this).prop('checked');
                    location.href = 'hybrid:Settings?tips=' + val;
                });
			});
		</script>
        <!-- Main content end -->
            
    </div>
    <hr />
    <footer>
        <p>&copy; 2017 - TomÃ¡Å¡ NÄmec</p>
    </footer>
</body>
</html>
");

}
}
}
#pragma warning restore 1591
